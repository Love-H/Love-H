<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LH</title>
  
  <subtitle>Form today on,everyday is a litter better !</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-18T14:03:23.235Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>I</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/11/18/%E5%AE%89%E8%A3%852/"/>
    <id>http://yoursite.com/2018/11/18/安装2/</id>
    <published>2018-11-18T14:03:23.228Z</published>
    <updated>2018-11-18T14:03:23.235Z</updated>
    
    <content type="html"><![CDATA[<h2 id="建站前的准备"><a href="#建站前的准备" class="headerlink" title="建站前的准备"></a>建站前的准备</h2><p>建站之前我们先要做好准备工作，将相关的工具准备好。</p><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><blockquote><p><strong>Node.js</strong> 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。</p></blockquote><p><strong>安装网址：</strong><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/</a><br> 验证是否安装成功：打开 cmd 命令行(win+r 输入 cmd 回车)执行 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>安装成功之后显示版本号：</p><p><img src="https:////upload-images.jianshu.io/upload_images/9066752-38c8b9556fc578e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/310/format/webp" alt="img"></p><p>node-v.png</p><p><img src="https:////upload-images.jianshu.io/upload_images/9066752-0c4e4cea9b701d0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/284/format/webp" alt="img"></p><p>npm-v.png</p><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><blockquote><p>通常使用 github 的对 git 并不陌生，Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 [1]  Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p></blockquote><p><strong>安装网址：</strong><a href="https://www.git-scm.com/download/win" target="_blank" rel="noopener">https://www.git-scm.com/download/win</a><br> 验证是否安装成功：打开cmd命令行(win+r 输入cmd回车)执行 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>安装成功之后显示版本号：</p><p><img src="https:////upload-images.jianshu.io/upload_images/9066752-7f01d0d4c6dd1e16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/296/format/webp" alt="img"></p><p>git-v.png</p><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。</p></blockquote><p>了解更多关于 Hexo 请查看官方网站：<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a></p><h3 id="安装-hexo-框架"><a href="#安装-hexo-框架" class="headerlink" title="安装 hexo 框架"></a>安装 hexo 框架</h3><p>下面一起来看看怎么安装 <strong>Hexo</strong> 框架？<br> 首先选择一个文件夹，这个文件夹主要存放关于你博客的配置文件以及以后要写的的文章，在该文件夹的根目录运行之前下好的 <strong>git-bash.exe</strong> 。</p><p><img src="https:////upload-images.jianshu.io/upload_images/9066752-7e2ee0cc84bb582c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/413/format/webp" alt="img"></p><p>VIZCAI6IPRQ<code>SW86Y@B5</code>1Q.png</p><p> 输入命令开始安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>这里安装的是 <strong>Hexo</strong> 最新版本，如果想安装以前的的版本请运行命令 <strong>$ npm install -g hexo</strong><br> 以上步骤不出问题的话就已经在本地机器上搭建起了 Hexo 环境。<br> 下面介绍 <strong>Hexo</strong> 的具体使用方法。</p><h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><h4 id="创建hexo工程"><a href="#创建hexo工程" class="headerlink" title="创建hexo工程"></a>创建hexo工程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br></pre></td></tr></table></figure><p>创建一个文件夹blog（blog 为文件夹的名字，可改成自己想要的名字），使用 Hexo 命令初始化 blog 为 hexo 工程目录。</p><h4 id="新建POST"><a href="#新建POST" class="headerlink" title="新建POST"></a>新建POST</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> $ cd blog</span><br><span class="line">$ hexo new “HelloWorld”</span><br></pre></td></tr></table></figure><p>进入初始化后的 <strong>blog</strong> 文件夹，创建名为HelloWorld的文件，此时会在 <strong>/blog/sources/_post/</strong> 目录下生成 <strong>HelloWorld.md</strong> 文件。</p><h4 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>使用 <strong>Hexo</strong> 引擎将 <strong>Markdown</strong> 格式的文件解析成可以使用浏览器查看的 <strong>HTML</strong> 文件，<strong>HTML</strong> 文件存储在 <strong>blog/public</strong> 目录下。</p><h4 id="运行hexo服务器"><a href="#运行hexo服务器" class="headerlink" title="运行hexo服务器"></a>运行hexo服务器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>打开命令行提示的地址，一般是 <a href="%5Bhttp://0.0.0.0:4000/">http://localhost:4000/</a>，既可以看到我们的 <strong>Hexo</strong> 网站。<br> 此时 <strong>Helloworld</strong> 文章中没有任何内容。打开 <strong>/blog/sources/_post/</strong> 目录，使用编辑器打开其中的 <strong>HelloWorld.md</strong>并在其中添加 <strong>markdown</strong> 格式的内容保存，然后重新运行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p><strong>命令的含义</strong>：<strong>hexo generate</strong> 生成静态文件， <strong>hexo server</strong> 启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>。 如果重新改变端口号请详细查看官网文档，这里不多介绍。<br> <strong>注意：</strong>如果在 <strong>HelloWorld.md</strong>文件中有中文，在网页进行浏览可能出现乱码，解决方式通过编辑器打开 <strong>HelloWorld.md</strong> 文件把编码方式改成 <strong>utf-8</strong> 就可以了。</p><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p><strong>Hexo</strong> 提供了默认主题 <strong>landscape</strong>，主题的位置在 <strong>blog -&gt;themes</strong> 文件夹下。主题根据自己喜好可以在网上找到，通过 <strong>Git</strong> 进行相应的下载。下面小鹿贴出几个主题可以进行相应的下载，喜欢哪一个可以进行配置到自己的个人博客了。</p><ul><li>主题一：<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a>（小鹿用的主题是这一个，后期是自己改进美化的）</li><li>主题二：<a href="https://github.com/TryGhost/Casper" target="_blank" rel="noopener">Casper</a> </li><li>主题三：<a href="https://github.com/daleanthony" target="_blank" rel="noopener">daleanthony</a> </li><li>主题四：<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">hexo-theme-yilia</a> </li><li>主题五：<a href="https://github.com/wuchong/jacman" target="_blank" rel="noopener">jacman</a> </li><li>主题六：<a href="https://github.com/joyceim/hexo-theme-apollo" target="_blank" rel="noopener">hexo-theme-apollo</a> </li></ul><p>小鹿给大家找了一个主题链接可以选择自己喜欢的主题：<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">更多主题</a></p><h4 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h4><p>打开 <strong>git-bash</strong> 切换到 <strong>blog -&gt; themes</strong> 目录下，如果在目录 <strong>blog -&gt;themes</strong> 右键选择启动 <strong>git-bash</strong> 就不用切换了。如果在桌面直接启动 <strong>git-bash</strong> ,可通过下边命令切换到 <strong>blog -&gt;themes</strong> 目录下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd /blog/themes</span><br></pre></td></tr></table></figure><p>选好一个主题，复制主题的 <strong>github</strong> 地址，通过 git 命令进行下载。（例：<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> 为一个主题的 <strong>github</strong> 地址）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next</span><br></pre></td></tr></table></figure><p>下载完之后我将文件夹改成 <strong>next</strong>了（也可以不改，我为了名字简洁点）。</p><p><img src="https:////upload-images.jianshu.io/upload_images/9066752-c75d813b3527ea98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700/format/webp" alt="img"></p><p>next.png</p><p>然后在修改 <strong>/blog/config.yml</strong> 文件，将其中的 <strong>theme</strong> 改成 <strong>next</strong>。（这个是改变主题的地方，如果你用的是其他的主题，将这个 <strong>next</strong> 改成你下载下来的主题的文件夹的名称）</p><p><img src="https:////upload-images.jianshu.io/upload_images/9066752-59b79996dd28acb9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/419/format/webp" alt="img"></p><p>修改next.png</p><p> 重新运行以下命令，查看更换主题后的效果 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h2 id="申请-Github-免费静态内容空间"><a href="#申请-Github-免费静态内容空间" class="headerlink" title="申请 Github 免费静态内容空间"></a>申请 Github 免费静态内容空间</h2><h3 id="注册-Github-账号"><a href="#注册-Github-账号" class="headerlink" title="注册 Github 账号"></a>注册 Github 账号</h3><p>我们去 <a href="https://github.com/" target="_blank" rel="noopener">Github</a> 的官网进行账号注册 ，注册完成之后我们根据<a href="https://git-scm.com/book/zh/v2/GitHub-%E8%B4%A6%E6%88%B7%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener">官方文档</a>进行配置 ，然后我们使用自己的账户创建一个 <strong>Repository</strong> （仓库）。<br> 点击网站右上角的 <strong>+</strong> 号，选择 <strong>New Repository</strong>( <strong>注意：</strong>创建仓库的名字要你的注册的用户名一致。其他默认，确定创建)。</p><p><img src="https:////upload-images.jianshu.io/upload_images/9066752-faa48d4a91abfb4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/434/format/webp" alt="img"></p><p>创建仓库.png</p><p><img src="https:////upload-images.jianshu.io/upload_images/9066752-ee47d9117a17875a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700/format/webp" alt="img"></p><p>创建仓库2.png</p><p>之后你的静态内容空间就已经创建好了，在浏览器输入你的 <strong>your username（用户名）.github.io</strong>  就可以访问了。</p><h2 id="将-Hexo-上传-Github-上。"><a href="#将-Hexo-上传-Github-上。" class="headerlink" title="将 Hexo 上传 Github 上。"></a>将 Hexo 上传 Github 上。</h2><p>步骤一：安装 <strong>deployer-git</strong> （安装部署工具，方便以后更新）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>步骤二：在 /blog/_config.yml 中修改 deploy 属性(注意“：”之后有空格 ) 否则配置失败。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/luxiangqiang/luxiangqiang.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>将上方的 <strong>Repository</strong> 换成你申请的 <strong>Git</strong> 仓库地址</p><p><img src="https:////upload-images.jianshu.io/upload_images/9066752-992dab28e9d9e404.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700/format/webp" alt="img"></p><p>github项目地址.png</p><p> 使用 </p><p>https</p><p> 的方式部署每次提交到 </p><p>Github</p><p> 都要输入用户名和密码，如果嫌麻烦请使用 </p><p>SSH</p><p> 的方式，百度/谷歌自行搜索。</p><p> 步骤三：初始化本地仓库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>步骤四：连接远程仓库 ( 如果是第一次使用 git，在使用 git 的时候会提示输入用户名和密码，用户名是自己的注册邮箱。)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/luxiangqiang/luxiangqiang.github.io.git</span><br></pre></td></tr></table></figure><p>步骤五：发布 <strong>hexo</strong> 到 <strong>github page</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//等于一次性执行了，清空、刷新、部署三个命令</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>步骤六：推送到远程仓库（github）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin</span><br></pre></td></tr></table></figure><p>这里建议创建一个新的分支 <strong>hexo</strong>，用于管理 <strong>hexo</strong> 文件。提交的的时候只提交 <strong>hexo</strong> 网站 <strong>html、css</strong> 等源文件。<br> 创建并切换到新建分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b hexo</span><br></pre></td></tr></table></figure><p>将分支推送到远程仓库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure><p>记得提交以后去 <strong>github</strong> 上把 <strong>hexo</strong> 分支设置默认，以后写文章等都要部署。 文章在 <strong>hexo</strong> 目录下的 <strong>\source\ _posts</strong> 文件夹中，是 <strong>md</strong> 格式，也就是 <strong>Markdown</strong> 格式。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;建站前的准备&quot;&gt;&lt;a href=&quot;#建站前的准备&quot; class=&quot;headerlink&quot; title=&quot;建站前的准备&quot;&gt;&lt;/a&gt;建站前的准备&lt;/h2&gt;&lt;p&gt;建站之前我们先要做好准备工作，将相关的工具准备好。&lt;/p&gt;
&lt;h3 id=&quot;安装-Node-js&quot;&gt;&lt;a h
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>image_text</title>
    <link href="http://yoursite.com/2018/11/18/image-text/"/>
    <id>http://yoursite.com/2018/11/18/image-text/</id>
    <published>2018-11-18T13:35:25.000Z</published>
    <updated>2018-11-18T14:02:54.926Z</updated>
    
    <content type="html"><![CDATA[<p><img src="1542546786398.png" alt=""></p><img src="/2018/11/18/image-text/1542546786398.png" title="This is an example image">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;1542546786398.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;img src=&quot;/2018/11/18/image-text/1542546786398.png&quot; title=&quot;This is an example image&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/11/18/%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2018/11/18/安装/</id>
    <published>2018-11-18T13:05:42.552Z</published>
    <updated>2018-11-18T13:13:23.273Z</updated>
    
    <content type="html"><![CDATA[<p><img src="C:\Users\33174\AppData\Local\Temp\WeChat Files\393711454704922794.jpg" alt="393711454704922794"></p><p>[TOC]</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装-Node-js-环境"><a href="#安装-Node-js-环境" class="headerlink" title="安装 Node.js 环境"></a>安装 Node.js 环境</h3><blockquote><p>何为<strong>Node.js</strong>?</p><p><strong>Node</strong>.<strong>js</strong>是一個能夠在伺服器端運行JavaScript的開放原始碼、跨平台JavaScript 執行環境</p></blockquote><p>安装网址：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></p><p> 查看是否安装成功：打开 cmd 命令行(win+r 输入 cmd 回车)执行 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>安装成功之后显示版本号：</p><p><img src="/blogs/1542546786398.png" alt="1542546786398"></p><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><h3 id="安装hedox"><a href="#安装hedox" class="headerlink" title="安装hedox"></a>安装hedox</h3><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><h2 id="同步到github"><a href="#同步到github" class="headerlink" title="同步到github"></a>同步到github</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;C:\Users\33174\AppData\Local\Temp\WeChat Files\393711454704922794.jpg&quot; alt=&quot;393711454704922794&quot;&gt;&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>two</title>
    <link href="http://yoursite.com/2018/11/18/two/"/>
    <id>http://yoursite.com/2018/11/18/two/</id>
    <published>2018-11-18T02:51:04.000Z</published>
    <updated>2018-11-18T02:54:38.712Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java基础" scheme="http://yoursite.com/tags/java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>myFristPageForTag</title>
    <link href="http://yoursite.com/2018/11/18/myFristPageForTag/"/>
    <id>http://yoursite.com/2018/11/18/myFristPageForTag/</id>
    <published>2018-11-18T02:38:08.000Z</published>
    <updated>2018-11-18T02:39:14.447Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="c" scheme="http://yoursite.com/tags/c/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>HelloWorld</title>
    <link href="http://yoursite.com/2018/11/17/HelloWorld/"/>
    <id>http://yoursite.com/2018/11/17/HelloWorld/</id>
    <published>2018-11-17T13:13:50.000Z</published>
    <updated>2018-11-18T03:26:19.460Z</updated>
    
    <content type="html"><![CDATA[<ul><li>撒地方都是饭asasdas</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;撒地方都是饭asasdas&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="c" scheme="http://yoursite.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/11/17/hello-world/"/>
    <id>http://yoursite.com/2018/11/17/hello-world/</id>
    <published>2018-11-17T13:11:28.205Z</published>
    <updated>2018-11-17T13:11:28.206Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
