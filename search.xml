<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2018%2F11%2F18%2F%E5%AE%89%E8%A3%852%2F</url>
    <content type="text"><![CDATA[建站前的准备建站之前我们先要做好准备工作，将相关的工具准备好。 安装 Node.js Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。 安装网址：https://nodejs.org/zh-cn/ 验证是否安装成功：打开 cmd 命令行(win+r 输入 cmd 回车)执行 ： 12node -vnpm -v 安装成功之后显示版本号： node-v.png npm-v.png 安装 Git 通常使用 github 的对 git 并不陌生，Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 [1] Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。 安装网址：https://www.git-scm.com/download/win 验证是否安装成功：打开cmd命令行(win+r 输入cmd回车)执行 ： 1git --version 安装成功之后显示版本号： git-v.png 安装 Hexo Hexo 是一个快速、简洁且高效的博客框架。 了解更多关于 Hexo 请查看官方网站：Hexo 安装 hexo 框架下面一起来看看怎么安装 Hexo 框架？ 首先选择一个文件夹，这个文件夹主要存放关于你博客的配置文件以及以后要写的的文章，在该文件夹的根目录运行之前下好的 git-bash.exe 。 VIZCAI6IPRQSW86Y@B51Q.png 输入命令开始安装： 1$ npm install -g hexo-cli 这里安装的是 Hexo 最新版本，如果想安装以前的的版本请运行命令 $ npm install -g hexo 以上步骤不出问题的话就已经在本地机器上搭建起了 Hexo 环境。 下面介绍 Hexo 的具体使用方法。 初始化Hexo创建hexo工程1$ hexo init blog 创建一个文件夹blog（blog 为文件夹的名字，可改成自己想要的名字），使用 Hexo 命令初始化 blog 为 hexo 工程目录。 新建POST12 $ cd blog$ hexo new “HelloWorld” 进入初始化后的 blog 文件夹，创建名为HelloWorld的文件，此时会在 /blog/sources/_post/ 目录下生成 HelloWorld.md 文件。 生成静态文件1$ hexo generate 使用 Hexo 引擎将 Markdown 格式的文件解析成可以使用浏览器查看的 HTML 文件，HTML 文件存储在 blog/public 目录下。 运行hexo服务器1$ hexo server 打开命令行提示的地址，一般是 http://localhost:4000/，既可以看到我们的 Hexo 网站。 此时 Helloworld 文章中没有任何内容。打开 /blog/sources/_post/ 目录，使用编辑器打开其中的 HelloWorld.md并在其中添加 markdown 格式的内容保存，然后重新运行以下命令： 12$ hexo generate$ hexo server 命令的含义：hexo generate 生成静态文件， hexo server 启动服务器。默认情况下，访问网址为： http://localhost:4000/。 如果重新改变端口号请详细查看官网文档，这里不多介绍。 注意：如果在 HelloWorld.md文件中有中文，在网页进行浏览可能出现乱码，解决方式通过编辑器打开 HelloWorld.md 文件把编码方式改成 utf-8 就可以了。 安装主题Hexo 提供了默认主题 landscape，主题的位置在 blog -&gt;themes 文件夹下。主题根据自己喜好可以在网上找到，通过 Git 进行相应的下载。下面小鹿贴出几个主题可以进行相应的下载，喜欢哪一个可以进行配置到自己的个人博客了。 主题一：hexo-theme-next（小鹿用的主题是这一个，后期是自己改进美化的） 主题二：Casper 主题三：daleanthony 主题四：hexo-theme-yilia 主题五：jacman 主题六：hexo-theme-apollo 小鹿给大家找了一个主题链接可以选择自己喜欢的主题：更多主题 配置主题打开 git-bash 切换到 blog -&gt; themes 目录下，如果在目录 blog -&gt;themes 右键选择启动 git-bash 就不用切换了。如果在桌面直接启动 git-bash ,可通过下边命令切换到 blog -&gt;themes 目录下。 1$ cd /blog/themes 选好一个主题，复制主题的 github 地址，通过 git 命令进行下载。（例：https://github.com/iissnan/hexo-theme-next 为一个主题的 github 地址） 1git clone https://github.com/iissnan/hexo-theme-next 下载完之后我将文件夹改成 next了（也可以不改，我为了名字简洁点）。 next.png 然后在修改 /blog/config.yml 文件，将其中的 theme 改成 next。（这个是改变主题的地方，如果你用的是其他的主题，将这个 next 改成你下载下来的主题的文件夹的名称） 修改next.png 重新运行以下命令，查看更换主题后的效果 ： 12$ hexo generate$ hexo server 申请 Github 免费静态内容空间注册 Github 账号我们去 Github 的官网进行账号注册 ，注册完成之后我们根据官方文档进行配置 ，然后我们使用自己的账户创建一个 Repository （仓库）。 点击网站右上角的 + 号，选择 New Repository( 注意：创建仓库的名字要你的注册的用户名一致。其他默认，确定创建)。 创建仓库.png 创建仓库2.png 之后你的静态内容空间就已经创建好了，在浏览器输入你的 your username（用户名）.github.io 就可以访问了。 将 Hexo 上传 Github 上。步骤一：安装 deployer-git （安装部署工具，方便以后更新） 1$ npm install hexo-deployer-git --save 步骤二：在 /blog/_config.yml 中修改 deploy 属性(注意“：”之后有空格 ) 否则配置失败。 1234deploy: type: git repository: https://github.com/luxiangqiang/luxiangqiang.github.io.git branch: master 将上方的 Repository 换成你申请的 Git 仓库地址 github项目地址.png 使用 https 的方式部署每次提交到 Github 都要输入用户名和密码，如果嫌麻烦请使用 SSH 的方式，百度/谷歌自行搜索。 步骤三：初始化本地仓库。 1git init 步骤四：连接远程仓库 ( 如果是第一次使用 git，在使用 git 的时候会提示输入用户名和密码，用户名是自己的注册邮箱。) 1git remote add origin https://github.com/luxiangqiang/luxiangqiang.github.io.git 步骤五：发布 hexo 到 github page 12//等于一次性执行了，清空、刷新、部署三个命令hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 步骤六：推送到远程仓库（github） 1git push origin 这里建议创建一个新的分支 hexo，用于管理 hexo 文件。提交的的时候只提交 hexo 网站 html、css 等源文件。 创建并切换到新建分支： 1git checkout -b hexo 将分支推送到远程仓库： 1git push origin hexo 记得提交以后去 github 上把 hexo 分支设置默认，以后写文章等都要部署。 文章在 hexo 目录下的 \source\ _posts 文件夹中，是 md 格式，也就是 Markdown 格式。]]></content>
  </entry>
  <entry>
    <title><![CDATA[image_text]]></title>
    <url>%2F2018%2F11%2F18%2Fimage-text%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title></title>
    <url>%2F2018%2F11%2F18%2F%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[[TOC] 安装安装 Node.js 环境 何为Node.js? Node.js是一個能夠在伺服器端運行JavaScript的開放原始碼、跨平台JavaScript 執行環境 安装网址：https://nodejs.org/en/ 查看是否安装成功：打开 cmd 命令行(win+r 输入 cmd 回车)执行 ： 12node -vnpm -v 安装成功之后显示版本号： 安装git安装hedox安装主题同步到github]]></content>
  </entry>
  <entry>
    <title><![CDATA[two]]></title>
    <url>%2F2018%2F11%2F18%2Ftwo%2F</url>
    <content type="text"></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[myFristPageForTag]]></title>
    <url>%2F2018%2F11%2F18%2FmyFristPageForTag%2F</url>
    <content type="text"></content>
      <tags>
        <tag>java</tag>
        <tag>c</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HelloWorld]]></title>
    <url>%2F2018%2F11%2F17%2FHelloWorld%2F</url>
    <content type="text"><![CDATA[撒地方都是饭asasdas]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>c</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F11%2F17%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
